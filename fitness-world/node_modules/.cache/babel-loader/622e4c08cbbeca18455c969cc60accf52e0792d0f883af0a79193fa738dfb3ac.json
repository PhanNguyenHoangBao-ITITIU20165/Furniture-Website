{"ast":null,"code":"var _jsxFileName = \"D:\\\\Furniture-Website\\\\furniture-world\\\\src\\\\pages\\\\admin\\\\orderListPage\\\\OrderListPageAdmin.tsx\",\n  _s = $RefreshSig$();\nimport { Table, Badge, Spin } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { sortedDate } from 'src/components/sortDate/sortDate';\nimport { getAllOrdersOfAllUsers } from 'src/redux/order/orderSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OrderListPageAdmin = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const orderList = useSelector(state => state.order.orderList) || [];\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllOrdersOfAllUsers());\n  }, []);\n  const expandedRowRender = row => {\n    const columns = [{\n      title: 'Image',\n      dataIndex: 'img',\n      key: 'image',\n      width: '30%',\n      render: (text, record) => record.image_dir ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: record.image_dir,\n        alt: record.product,\n        style: {\n          width: '50px',\n          height: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this)\n    }, {\n      title: 'Product',\n      dataIndex: 'product',\n      key: 'product',\n      width: '25%'\n    }, {\n      title: 'Category',\n      dataIndex: 'category',\n      key: 'category',\n      width: '20%',\n      filters: [{\n        text: 'Dining Room',\n        value: 'Dining Room'\n      }, {\n        text: 'Kitchen',\n        value: 'Kitchen'\n      }, {\n        text: 'Bedroom',\n        value: 'Bedroom'\n      }, {\n        text: 'Office',\n        value: 'Office'\n      }, {\n        text: 'Living Room',\n        value: 'Living Room'\n      }],\n      onFilter: (value, record) => record.category.indexOf(value) === 0\n    }, {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      key: 'quantity',\n      width: '10%',\n      sorter: (a, b) => a.quantity - b.quantity\n    }, {\n      title: 'Unit Price',\n      dataIndex: 'unitPrice',\n      key: 'unitPrice',\n      render: text => `$${text}`,\n      width: '15%',\n      sorter: (a, b) => a.unitPrice - b.unitPrice\n    }];\n    const data = orderList[row.key].products;\n    return /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: data,\n      pagination: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this);\n  };\n  const columns = [{\n    title: 'Order Id',\n    dataIndex: 'id',\n    key: 'id',\n    width: '20%'\n  }, {\n    title: 'User Id',\n    dataIndex: 'userId',\n    key: 'userId',\n    width: '20%'\n  }, {\n    title: 'Date',\n    dataIndex: 'createdAt',\n    key: 'date',\n    width: '20%',\n    sorter: (a, b) => sortedDate(a.createdAt, b.createdAt)\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    width: '15%',\n    render: record => {\n      let statusText = '';\n      let statusColor = undefined;\n      switch (record) {\n        case 'Success':\n          statusText = 'Success';\n          statusColor = 'success';\n          break;\n        case 'pending':\n          statusText = 'Pending';\n          statusColor = 'warning';\n          break;\n      }\n      return /*#__PURE__*/_jsxDEV(Badge, {\n        status: statusColor,\n        text: statusText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 24\n      }, this);\n    },\n    filters: [{\n      text: 'Pending',\n      value: 'pending'\n    }, {\n      text: 'Success',\n      value: 'success'\n    }],\n    onFilter: (value, record) => record.status.indexOf(value) === 0\n  }, {\n    title: 'Total price',\n    dataIndex: 'total',\n    key: 'total',\n    width: '15%',\n    render: text => `$${text}`,\n    sorter: (a, b) => a.total - b.total\n  }, {\n    title: 'Payment',\n    dataIndex: 'payment',\n    key: 'payment',\n    width: '10%',\n    filters: [{\n      text: 'cash',\n      value: 'cash'\n    }, {\n      text: 'banking',\n      value: 'banking'\n    }],\n    onFilter: (value, record) => record.payment.indexOf(value) === 0\n  }];\n  const data = [];\n  orderList.map((order, index) => {\n    data.push({\n      key: index,\n      id: order.id,\n      userId: order.userId,\n      status: order.status,\n      total: order.total,\n      payment: order.payment,\n      createdAt: order.createdAt\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Table, {\n    bordered: true,\n    columns: columns,\n    loading: loading,\n    expandable: {\n      expandedRowRender\n    },\n    dataSource: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 12\n  }, this);\n};\n_s(OrderListPageAdmin, \"mWqvmGrk9vK4NpI4pQHb/ziDXUc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = OrderListPageAdmin;\nvar _c;\n$RefreshReg$(_c, \"OrderListPageAdmin\");","map":{"version":3,"names":["Table","Badge","Spin","React","useEffect","useState","useDispatch","useSelector","sortedDate","getAllOrdersOfAllUsers","jsxDEV","_jsxDEV","OrderListPageAdmin","_s","loading","setLoading","orderList","state","order","dispatch","expandedRowRender","row","columns","title","dataIndex","key","width","render","text","record","image_dir","src","alt","product","style","height","fileName","_jsxFileName","lineNumber","columnNumber","filters","value","onFilter","category","indexOf","sorter","a","b","quantity","unitPrice","data","products","bordered","dataSource","pagination","createdAt","statusText","statusColor","undefined","status","total","payment","map","index","push","id","userId","expandable","_c","$RefreshReg$"],"sources":["D:/Furniture-Website/furniture-world/src/pages/admin/orderListPage/OrderListPageAdmin.tsx"],"sourcesContent":["import { TableColumnsType, Table, Badge, Spin } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Props } from 'react-infinite-scroll-component';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { sortedDate } from 'src/components/sortDate/sortDate';\r\nimport { IOrder, IProductOrder, getAllOrdersOfAllUsers } from 'src/redux/order/orderSlice';\r\nimport { IAppDispatch, IRootState } from 'src/redux/store';\r\n\r\ninterface IOrdersDataAttributesAdmin extends Omit<IOrder, 'products'> {\r\n    key: number;\r\n}\r\n\r\nexport const OrderListPageAdmin = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const orderList = useSelector((state: IRootState) => state.order.orderList) || [];\r\n    const dispatch = useDispatch<IAppDispatch>();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllOrdersOfAllUsers());\r\n    }, []);\r\n    const expandedRowRender = (row: IOrdersDataAttributesAdmin) => {\r\n        const columns: TableColumnsType<IProductOrder> = [\r\n            {\r\n                title: 'Image',\r\n                dataIndex: 'img',\r\n                key: 'image',\r\n                width: '30%',\r\n                render: (text, record) =>\r\n                    record.image_dir ? (\r\n                        <img src={record.image_dir} alt={record.product} style={{ width: '50px', height: '50px' }} />\r\n                    ) : (\r\n                        <Spin />\r\n                    ),\r\n            },\r\n            { title: 'Product', dataIndex: 'product', key: 'product', width: '25%' },\r\n            {\r\n                title: 'Category',\r\n                dataIndex: 'category',\r\n                key: 'category',\r\n                width: '20%',\r\n                filters: [\r\n                    {\r\n                        text: 'Dining Room',\r\n                        value: 'Dining Room',\r\n                    },\r\n                    {\r\n                        text: 'Kitchen',\r\n                        value: 'Kitchen',\r\n                    },\r\n                    {\r\n                        text: 'Bedroom',\r\n                        value: 'Bedroom',\r\n                    },\r\n                    {\r\n                        text: 'Office',\r\n                        value: 'Office',\r\n                    },\r\n                    {\r\n                        text: 'Living Room',\r\n                        value: 'Living Room',\r\n                    },\r\n                ],\r\n                onFilter: (value, record) => record.category.indexOf(value as string) === 0,\r\n            },\r\n            {\r\n                title: 'Quantity',\r\n                dataIndex: 'quantity',\r\n                key: 'quantity',\r\n                width: '10%',\r\n                sorter: (a, b) => a.quantity - b.quantity,\r\n            },\r\n            {\r\n                title: 'Unit Price',\r\n                dataIndex: 'unitPrice',\r\n                key: 'unitPrice',\r\n                render: (text) => `$${text}`,\r\n                width: '15%',\r\n                sorter: (a, b) => a.unitPrice - b.unitPrice,\r\n            },\r\n        ];\r\n\r\n        const data: IProductOrder[] = orderList[row.key].products;\r\n\r\n        return <Table bordered columns={columns} dataSource={data} pagination={false} />;\r\n    };\r\n\r\n    const columns: TableColumnsType<IOrdersDataAttributesAdmin> = [\r\n        {\r\n            title: 'Order Id',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: '20%',\r\n        },\r\n        {\r\n            title: 'User Id',\r\n            dataIndex: 'userId',\r\n            key: 'userId',\r\n            width: '20%',\r\n        },\r\n        {\r\n            title: 'Date',\r\n            dataIndex: 'createdAt',\r\n            key: 'date',\r\n            width: '20%',\r\n            sorter: (a, b) => sortedDate(a.createdAt, b.createdAt),\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            width: '15%',\r\n            render: (record) => {\r\n                let statusText = '';\r\n                let statusColor: 'success' | 'warning' | 'default' | 'processing' | 'error' | undefined = undefined;\r\n\r\n                switch (record) {\r\n                    case 'Success':\r\n                        statusText = 'Success';\r\n                        statusColor = 'success';\r\n                        break;\r\n                    case 'pending':\r\n                        statusText = 'Pending';\r\n                        statusColor = 'warning';\r\n                        break;\r\n                }\r\n                return <Badge status={statusColor} text={statusText} />;\r\n            },\r\n            filters: [\r\n                { text: 'Pending', value: 'pending' },\r\n                { text: 'Success', value: 'success' },\r\n            ],\r\n            onFilter: (value, record) => record.status.indexOf(value as string) === 0,\r\n        },\r\n        {\r\n            title: 'Total price',\r\n            dataIndex: 'total',\r\n            key: 'total',\r\n            width: '15%',\r\n            render: (text) => `$${text}`,\r\n            sorter: (a, b) => a.total - b.total,\r\n        },\r\n        {\r\n            title: 'Payment',\r\n            dataIndex: 'payment',\r\n            key: 'payment',\r\n            width: '10%',\r\n            filters: [\r\n                { text: 'cash', value: 'cash' },\r\n                { text: 'banking', value: 'banking' },\r\n            ],\r\n            onFilter: (value, record) => record.payment.indexOf(value as string) === 0,\r\n        },\r\n    ];\r\n\r\n    const data: IOrdersDataAttributesAdmin[] = [];\r\n\r\n    orderList.map((order, index) => {\r\n        data.push({\r\n            key: index,\r\n            id: order.id,\r\n            userId: order.userId,\r\n            status: order.status,\r\n            total: order.total,\r\n            payment: order.payment,\r\n            createdAt: order.createdAt,\r\n        });\r\n    });\r\n\r\n    return <Table bordered columns={columns} loading={loading} expandable={{ expandedRowRender }} dataSource={data} />;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}