{"ast":null,"code":"var _jsxFileName = \"D:\\\\Furniture-Website\\\\furniture-world\\\\src\\\\pages\\\\admin\\\\userPage\\\\UsersPageAdmin.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Table } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllUsers } from 'src/redux/user/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersPageAdmin = () => {\n  _s();\n  var _useSelector;\n  const allUsersData = (_useSelector = useSelector(state => state.user.userList)) !== null && _useSelector !== void 0 ? _useSelector : {};\n  const dispatch = useDispatch();\n  const columns = [{\n    title: 'User ID',\n    dataIndex: 'id',\n    key: 'id',\n    width: 150,\n    fixed: 'left'\n  }, {\n    title: 'Avatar',\n    dataIndex: 'profileImg_dir',\n    key: 'profileImg_dir',\n    width: 150,\n    fixed: 'left'\n  }, {\n    title: 'Name',\n    dataIndex: 'fullname',\n    key: 'fullname',\n    width: 150\n  }, {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n    width: 150\n  }, {\n    title: 'Phone Number',\n    dataIndex: 'phone',\n    key: 'phone',\n    width: 150\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n    width: 200\n  }, {\n    title: 'Country',\n    dataIndex: 'country',\n    key: 'country',\n    width: 150\n  }, {\n    title: 'Role',\n    dataIndex: 'role',\n    key: 'role',\n    width: 100\n  }, {\n    title: 'Created Date',\n    dataIndex: 'createdAt',\n    key: 'createdAt',\n    width: 150,\n    fixed: 'right'\n  }, {\n    title: 'Updated Date',\n    dataIndex: 'updatedAt',\n    key: 'updatedAt',\n    width: 150,\n    fixed: 'right'\n  }];\n  const data = allUsersData;\n  useEffect(() => {\n    dispatch(getAllUsers());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: data,\n    bordered: true\n    // loading={loading}\n    ,\n    scroll: {\n      x: 2000,\n      y: 600\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n\n// userId name email phone address country createdAt\n_s(UsersPageAdmin, \"OQ+vRCdf9dem+DebnVfWfBDfeQA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = UsersPageAdmin;\nvar _c;\n$RefreshReg$(_c, \"UsersPageAdmin\");","map":{"version":3,"names":["React","useEffect","Table","useDispatch","useSelector","getAllUsers","jsxDEV","_jsxDEV","UsersPageAdmin","_s","_useSelector","allUsersData","state","user","userList","dispatch","columns","title","dataIndex","key","width","fixed","data","dataSource","bordered","scroll","x","y","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Furniture-Website/furniture-world/src/pages/admin/userPage/UsersPageAdmin.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Table } from 'antd';\r\nimport type { GetProp, TableProps } from 'antd';\r\nimport qs from 'qs';\r\nimport { IUserData } from 'src/redux/api/authSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IAppDispatch, IRootState } from 'src/redux/store';\r\nimport { IUserFullData, getAllUsers } from 'src/redux/user/userSlice';\r\n\r\ntype ColumnsType<T> = TableProps<T>['columns'];\r\ntype TablePaginationConfig = Exclude<GetProp<TableProps, 'pagination'>, boolean>;\r\n\r\nexport const UsersPageAdmin = () => {\r\n    const allUsersData = useSelector((state: IRootState) => state.user.userList) ?? {};\r\n    const dispatch = useDispatch<IAppDispatch>();\r\n\r\n    const columns: ColumnsType<IUserFullData> = [\r\n        {\r\n            title: 'User ID',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            width: 150,\r\n            fixed: 'left',\r\n        },\r\n        {\r\n            title: 'Avatar',\r\n            dataIndex: 'profileImg_dir',\r\n            key: 'profileImg_dir',\r\n            width: 150,\r\n            fixed: 'left',\r\n        },\r\n\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'fullname',\r\n            key: 'fullname',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Phone Number',\r\n            dataIndex: 'phone',\r\n            key: 'phone',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Country',\r\n            dataIndex: 'country',\r\n            key: 'country',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Role',\r\n            dataIndex: 'role',\r\n            key: 'role',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Created Date',\r\n            dataIndex: 'createdAt',\r\n            key: 'createdAt',\r\n            width: 150,\r\n            fixed: 'right',\r\n        },\r\n        {\r\n            title: 'Updated Date',\r\n            dataIndex: 'updatedAt',\r\n            key: 'updatedAt',\r\n            width: 150,\r\n            fixed: 'right',\r\n        },\r\n    ];\r\n\r\n    const data: IUserFullData[] = allUsersData;\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllUsers());\r\n    }, []);\r\n\r\n    return (\r\n        <Table\r\n            columns={columns}\r\n            dataSource={data}\r\n            bordered\r\n            // loading={loading}\r\n            scroll={{ x: 2000, y: 600 }}\r\n        />\r\n    );\r\n};\r\n\r\n// userId name email phone address country createdAt\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAkB,OAAO;AAClD,SAASC,KAAK,QAAQ,MAAM;AAI5B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAAwBC,WAAW,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKtE,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,YAAA;EAChC,MAAMC,YAAY,IAAAD,YAAA,GAAGN,WAAW,CAAEQ,KAAiB,IAAKA,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,cAAAJ,YAAA,cAAAA,YAAA,GAAI,CAAC,CAAC;EAClF,MAAMK,QAAQ,GAAGZ,WAAW,CAAe,CAAC;EAE5C,MAAMa,OAAmC,GAAG,CACxC;IACIC,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE,IAAI;IACfC,GAAG,EAAE,IAAI;IACTC,KAAK,EAAE,GAAG;IACVC,KAAK,EAAE;EACX,CAAC,EACD;IACIJ,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,gBAAgB;IAC3BC,GAAG,EAAE,gBAAgB;IACrBC,KAAK,EAAE,GAAG;IACVC,KAAK,EAAE;EACX,CAAC,EAED;IACIJ,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,UAAU;IACrBC,GAAG,EAAE,UAAU;IACfC,KAAK,EAAE;EACX,CAAC,EACD;IACIH,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,OAAO;IAClBC,GAAG,EAAE,OAAO;IACZC,KAAK,EAAE;EACX,CAAC,EACD;IACIH,KAAK,EAAE,cAAc;IACrBC,SAAS,EAAE,OAAO;IAClBC,GAAG,EAAE,OAAO;IACZC,KAAK,EAAE;EACX,CAAC,EACD;IACIH,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE,SAAS;IACpBC,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE;EACX,CAAC,EACD;IACIH,KAAK,EAAE,SAAS;IAChBC,SAAS,EAAE,SAAS;IACpBC,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE;EACX,CAAC,EACD;IACIH,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,MAAM;IACjBC,GAAG,EAAE,MAAM;IACXC,KAAK,EAAE;EACX,CAAC,EACD;IACIH,KAAK,EAAE,cAAc;IACrBC,SAAS,EAAE,WAAW;IACtBC,GAAG,EAAE,WAAW;IAChBC,KAAK,EAAE,GAAG;IACVC,KAAK,EAAE;EACX,CAAC,EACD;IACIJ,KAAK,EAAE,cAAc;IACrBC,SAAS,EAAE,WAAW;IACtBC,GAAG,EAAE,WAAW;IAChBC,KAAK,EAAE,GAAG;IACVC,KAAK,EAAE;EACX,CAAC,CACJ;EAED,MAAMC,IAAqB,GAAGX,YAAY;EAE1CV,SAAS,CAAC,MAAM;IACZc,QAAQ,CAACV,WAAW,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIE,OAAA,CAACL,KAAK;IACFc,OAAO,EAAEA,OAAQ;IACjBO,UAAU,EAAED,IAAK;IACjBE,QAAQ;IACR;IAAA;IACAC,MAAM,EAAE;MAAEC,CAAC,EAAE,IAAI;MAAEC,CAAC,EAAE;IAAI;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV,CAAC;;AAED;AAAAtB,EAAA,CAzFaD,cAAc;EAAA,QACFJ,WAAW,EACfD,WAAW;AAAA;AAAA6B,EAAA,GAFnBxB,cAAc;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}