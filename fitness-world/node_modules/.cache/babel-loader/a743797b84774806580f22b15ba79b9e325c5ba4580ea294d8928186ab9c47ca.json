{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { addNewProductAPI, getAllProductsAPI, getProductImageAPI, updateProductAPI, updateProductImageAPI } from 'src/constant/api/productsAPI';\nimport Cookies from 'js-cookie';\n\n// backend update new UpdatedAt\n\nexport const fetchProducts = createAsyncThunk('products/getAllProducts', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await getAllProductsAPI();\n    const products = [];\n    for (const product of data) {\n      const formattedTime = dateObject => {\n        const hours = dateObject.getHours().toString().padStart(2, '0');\n        const minutes = dateObject.getMinutes().toString().padStart(2, '0');\n        const day = dateObject.getDate().toString().padStart(2, '0');\n        const month = (dateObject.getMonth() + 1).toString().padStart(2, '0'); // Month starts from 0\n        const year = dateObject.getFullYear();\n        return `${hours}:${minutes} - ${day}/${month}/${year}`;\n      };\n      const createdAt = formattedTime(new Date(product.createdAt));\n      const updatedAt = formattedTime(new Date(product.updatedAt));\n\n      // const productImage: any = (await getProductImageAPI(product.id)) ;\n      // const productImageUrl = URL.createObjectURL(productImage.data);\n      // else productImageUrl = null;\n      // console.log(productImage);\n      // let productImageUrl = null;\n      // if (productImage !== null) productImageUrl = URL.createObjectURL(productImage.data);\n\n      let productImageUrl;\n      // getProductImage and handle case image null\n      // if (product.image_dir === undefined) {\n      try {\n        const productImage = await getProductImageAPI(product.id);\n        if (productImage.status === 200) {\n          productImageUrl = URL.createObjectURL(productImage.data);\n        } else {\n          throw new Error('Failed to fetch image');\n        }\n      } catch (error) {\n        console.error('Error fetching product image:', error);\n        productImageUrl = null;\n      }\n      // } else productImageUrl = product.imageUrl;\n\n      products.push({\n        id: product.id,\n        name: product.name,\n        price: product.price,\n        quantity: product.quantity,\n        category: product.category,\n        image_dir: productImageUrl,\n        description: product.description,\n        discount: undefined,\n        status: product.status,\n        createdAt: createdAt,\n        updatedAt: updatedAt\n      });\n    }\n    return products;\n  } catch (error) {\n    if (error.response && error.response.message) return rejectWithValue(error.response.message);else return rejectWithValue(error.message);\n  }\n});\nexport const updateProductImage = createAsyncThunk('products/updateProductImage', async ({\n  image_dir,\n  id\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const token = Cookies.get('accessToken');\n    const response = await updateProductImageAPI(token, image_dir, id);\n\n    // const productImage: any = await getProductImageAPI(id);\n    // const productImageUrl = URL.createObjectURL(productImage.data);\n    // const imageData: IProductImage = { image_dir: productImageUrl, id: id };\n    // console.log(imageData);\n    // return imageData;\n    return;\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\nexport const updateProduct = createAsyncThunk('products/productUpdate', async (product, {\n  rejectWithValue\n}) => {\n  try {\n    const adminToken = Cookies.get('accessToken');\n    const {\n      data\n    } = await updateProductAPI(product, adminToken);\n    return {\n      id: data.id,\n      name: data.name,\n      price: data.price,\n      quantity: data.quantity,\n      category: data.category,\n      description: data.description,\n      discount: undefined,\n      status: data.status\n    };\n  } catch (err) {\n    return rejectWithValue(err);\n  }\n});\nexport const addNewProduct = createAsyncThunk('products/addNewProduct', async (productData, {\n  rejectWithValue\n}) => {\n  try {\n    const adminToken = Cookies.get('accessToken');\n    const {\n      data\n    } = await addNewProductAPI(productData, adminToken);\n    return data;\n  } catch (err) {\n    return rejectWithValue(err);\n  }\n});\nconst initialState = {\n  items: [],\n  error: null,\n  status: 'idle'\n};\nexport const productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProducts.fulfilled, (state, {\n      payload\n    }) => {\n      state.status = 'succeed';\n      state.items = payload;\n    }).addCase(fetchProducts.rejected, (state, {\n      payload\n    }) => {\n      state.status = 'failed';\n      state.error = payload !== null && payload !== void 0 ? payload : null;\n    }).addCase(updateProductImage.pending, state => {\n      state.status = 'loading';\n    }).addCase(updateProductImage.fulfilled, (state, {\n      payload\n    }) => {\n      state.status = 'succeed';\n      // const temp = [...state.items];\n      // temp.forEach((item) => {\n      //     if (item.id === payload.id) item.image_dir = payload.image_dir;\n      // });\n      // state.items = temp;\n    }).addCase(updateProductImage.rejected, (state, {\n      payload\n    }) => {\n      state.status = 'failed';\n      state.error = payload !== null && payload !== void 0 ? payload : null;\n    }).addCase(updateProduct.pending, state => {\n      state.status = 'loading';\n    }).addCase(updateProduct.fulfilled, (state, {\n      payload\n    }) => {\n      state.status = 'succeed';\n\n      // -- first way --\n      const index = state.items.findIndex(item => item.id === payload.id);\n      if (index !== -1) {\n        state.items[index] = {\n          ...state.items[index],\n          ...payload\n        };\n      }\n\n      // -- Second way --\n      // const temp = [...state.items];\n      // temp.forEach((item) => {\n      //     if (item.id === payload.id) {\n      //         item = {\n      //             ...item,\n      //             name: payload.name,\n      //             price: payload.price,\n      //             description: payload.description,\n      //             status: payload.status,\n      //             quantity: payload.quantity,\n      //             category: payload.category,\n      //         };\n      //     }\n      // });\n      // state.items = temp;\n    }).addCase(updateProduct.rejected, (state, {\n      payload\n    }) => {\n      state.status = 'failed';\n      state.error = payload !== null && payload !== void 0 ? payload : null;\n    });\n  }\n});","map":{"version":3,"names":["createAsyncThunk","createSlice","addNewProductAPI","getAllProductsAPI","getProductImageAPI","updateProductAPI","updateProductImageAPI","Cookies","fetchProducts","_","rejectWithValue","data","products","product","formattedTime","dateObject","hours","getHours","toString","padStart","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","createdAt","Date","updatedAt","productImageUrl","productImage","id","status","URL","createObjectURL","Error","error","console","push","name","price","quantity","category","image_dir","description","discount","undefined","response","message","updateProductImage","token","get","err","updateProduct","adminToken","addNewProduct","productData","initialState","items","productsSlice","reducers","extraReducers","builder","addCase","pending","state","fulfilled","payload","rejected","index","findIndex","item"],"sources":["D:/FurniScape/furniture-world/src/redux/products/productsSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query';\r\nimport { backendURL } from 'src/constant/api/backendURL';\r\nimport { IRootState } from '../store';\r\nimport {\r\n    addNewProductAPI,\r\n    getAllProductsAPI,\r\n    getProductImageAPI,\r\n    updateProductAPI,\r\n    updateProductImageAPI,\r\n} from 'src/constant/api/productsAPI';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport interface IProduct {\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n    category: string;\r\n    image_dir: any;\r\n    description: string;\r\n    discount?: number;\r\n    status: string;\r\n    quantity: number;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n}\r\n\r\n// backend update new UpdatedAt\r\nexport interface IUpdateProduct {\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n    category: string;\r\n    description: string;\r\n    discount?: number;\r\n    status: string;\r\n    quantity: number;\r\n    updatedAt?: string;\r\n}\r\n\r\nexport interface IAddNewProduct {\r\n    name: string;\r\n    category: string;\r\n    price: number;\r\n    quantity: number;\r\n    description: string;\r\n}\r\n\r\nexport interface IProductImage {\r\n    image_dir: any;\r\n    id: string;\r\n}\r\n\r\nexport interface IProductInStock {\r\n    items: IProduct[];\r\n    error: Object | null;\r\n    status: string;\r\n}\r\n\r\nexport const fetchProducts = createAsyncThunk<IProduct[], void>(\r\n    'products/getAllProducts',\r\n    async (_, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await getAllProductsAPI();\r\n\r\n            const products: IProduct[] = [];\r\n            for (const product of data) {\r\n                const formattedTime = (dateObject: Date) => {\r\n                    const hours = dateObject.getHours().toString().padStart(2, '0');\r\n                    const minutes = dateObject.getMinutes().toString().padStart(2, '0');\r\n                    const day = dateObject.getDate().toString().padStart(2, '0');\r\n                    const month = (dateObject.getMonth() + 1).toString().padStart(2, '0'); // Month starts from 0\r\n                    const year = dateObject.getFullYear();\r\n\r\n                    return `${hours}:${minutes} - ${day}/${month}/${year}`;\r\n                };\r\n\r\n                const createdAt = formattedTime(new Date(product.createdAt));\r\n                const updatedAt = formattedTime(new Date(product.updatedAt));\r\n\r\n                // const productImage: any = (await getProductImageAPI(product.id)) ;\r\n                // const productImageUrl = URL.createObjectURL(productImage.data);\r\n                // else productImageUrl = null;\r\n                // console.log(productImage);\r\n                // let productImageUrl = null;\r\n                // if (productImage !== null) productImageUrl = URL.createObjectURL(productImage.data);\r\n\r\n                let productImageUrl;\r\n                // getProductImage and handle case image null\r\n                // if (product.image_dir === undefined) {\r\n                try {\r\n                    const productImage: any = await getProductImageAPI(product.id);\r\n\r\n                    if (productImage.status === 200) {\r\n                        productImageUrl = URL.createObjectURL(productImage.data);\r\n                    } else {\r\n                        throw new Error('Failed to fetch image');\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching product image:', error);\r\n                    productImageUrl = null;\r\n                }\r\n                // } else productImageUrl = product.imageUrl;\r\n\r\n                products.push({\r\n                    id: product.id,\r\n                    name: product.name,\r\n                    price: product.price,\r\n                    quantity: product.quantity,\r\n                    category: product.category,\r\n                    image_dir: productImageUrl,\r\n                    description: product.description,\r\n                    discount: undefined,\r\n                    status: product.status,\r\n                    createdAt: createdAt,\r\n                    updatedAt: updatedAt,\r\n                });\r\n            }\r\n\r\n            return products;\r\n        } catch (error: any) {\r\n            if (error.response && error.response.message) return rejectWithValue(error.response.message);\r\n            else return rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\n\r\nexport const updateProductImage = createAsyncThunk(\r\n    'products/updateProductImage',\r\n    async ({ image_dir, id }: IProductImage, { rejectWithValue }) => {\r\n        try {\r\n            const token = Cookies.get('accessToken');\r\n            const response = await updateProductImageAPI(token, image_dir, id);\r\n\r\n            // const productImage: any = await getProductImageAPI(id);\r\n            // const productImageUrl = URL.createObjectURL(productImage.data);\r\n            // const imageData: IProductImage = { image_dir: productImageUrl, id: id };\r\n            // console.log(imageData);\r\n            // return imageData;\r\n            return ;\r\n        } catch (err: any) {\r\n            return rejectWithValue(err.message);\r\n        }\r\n    },\r\n);\r\n\r\nexport const updateProduct = createAsyncThunk(\r\n    'products/productUpdate',\r\n    async (product: IUpdateProduct, { rejectWithValue }) => {\r\n        try {\r\n            const adminToken = Cookies.get('accessToken');\r\n            const { data } = await updateProductAPI(product, adminToken);\r\n\r\n            return {\r\n                id: data.id,\r\n                name: data.name,\r\n                price: data.price,\r\n                quantity: data.quantity,\r\n                category: data.category,\r\n                description: data.description,\r\n                discount: undefined,\r\n                status: data.status,\r\n            };\r\n        } catch (err) {\r\n            return rejectWithValue(err);\r\n        }\r\n    },\r\n);\r\n\r\nexport const addNewProduct = createAsyncThunk(\r\n    'products/addNewProduct',\r\n    async (productData: IAddNewProduct, { rejectWithValue }) => {\r\n        try {\r\n            const adminToken = Cookies.get('accessToken');\r\n            const { data } = await addNewProductAPI(productData, adminToken);\r\n\r\n            return data;\r\n        } catch (err: any) {\r\n            return rejectWithValue(err);\r\n        }\r\n    },\r\n);\r\n\r\nconst initialState: IProductInStock = {\r\n    items: [],\r\n    error: null,\r\n    status: 'idle',\r\n};\r\n\r\nexport const productsSlice = createSlice({\r\n    name: 'products',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchProducts.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(fetchProducts.fulfilled, (state, { payload }) => {\r\n                state.status = 'succeed';\r\n                state.items = payload;\r\n            })\r\n            .addCase(fetchProducts.rejected, (state, { payload }) => {\r\n                state.status = 'failed';\r\n                state.error = payload ?? null;\r\n            })\r\n            .addCase(updateProductImage.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(updateProductImage.fulfilled, (state, { payload }) => {\r\n                state.status = 'succeed';\r\n                // const temp = [...state.items];\r\n                // temp.forEach((item) => {\r\n                //     if (item.id === payload.id) item.image_dir = payload.image_dir;\r\n                // });\r\n                // state.items = temp;\r\n            })\r\n            .addCase(updateProductImage.rejected, (state, { payload }) => {\r\n                state.status = 'failed';\r\n                state.error = payload ?? null;\r\n            })\r\n            .addCase(updateProduct.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(updateProduct.fulfilled, (state, { payload }) => {\r\n                state.status = 'succeed';\r\n\r\n                // -- first way --\r\n                const index = state.items.findIndex((item) => item.id === payload.id);\r\n                if (index !== -1) {\r\n                    state.items[index] = {\r\n                        ...state.items[index],\r\n                        ...payload,\r\n                    };\r\n                }\r\n\r\n                // -- Second way --\r\n                // const temp = [...state.items];\r\n                // temp.forEach((item) => {\r\n                //     if (item.id === payload.id) {\r\n                //         item = {\r\n                //             ...item,\r\n                //             name: payload.name,\r\n                //             price: payload.price,\r\n                //             description: payload.description,\r\n                //             status: payload.status,\r\n                //             quantity: payload.quantity,\r\n                //             category: payload.category,\r\n                //         };\r\n                //     }\r\n                // });\r\n                // state.items = temp;\r\n            })\r\n            .addCase(updateProduct.rejected, (state, { payload }) => {\r\n                state.status = 'failed';\r\n                state.error = payload ?? null;\r\n            });\r\n    },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}